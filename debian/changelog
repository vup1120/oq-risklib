  [Michele Simionato]
  * Fixed HDF5 segmentation faults in the tests for Ubuntu 16.04

  [Daniele Viganò]
  * Added support for Ubuntu 16.04 (xenial) packages

  [Michele Simionato]
  * Optimized the case when the epsilons are not required, i.e. all the
    covariance coefficients are zero in the vulnerability functions
  * Added another test for event based risk (`case_miriam`)
  * Revisited the distribution mechanism and refined the weight of the
    ruptures in the event based calculators to avoid generating slow tasks
  * Added an automatic help for the subcommands of oq-lite and managed
    --version correctly
  * The event based risk calculator now use different seeds for different
    realizations; also, the performance has been substantially improved
  * Improved the .rst reports with data transfer information

  [Matteo Nastasi]
  * Backport of libhdf5 and h5py for ubuntu 'precise' serie

  [Michele Simionato]
  * Introduced filtering on the minimum intensity of the ground shaking
  * Solved the issue of serializing large SES collections, over the HDF5 limit
  * The loss maps and curves XML exporters now export the coordinates
    of the assets, not the coordinates of the closest hazard site
  * Stored the job.ini parameters into a table in the datastore
  * Added a check on the IMTs coming from the risk models
  * Changed the aggregate loss table exporter to export the event tags,
    not the event IDs
  * Fixed a bug with the CSV export of the ground motion fields
  * Fixed a bug with the export of UHS curves with `--exports=xml`
  * Reduced substantially the data transfer and the memory occupation
    for event based calculations with a large number of assets: we
    can run the California exposure with half million assets now
  * Fixed a bug in the SESCollection exporter
  * Changed the asset<->epsilons association: before for a given taxonomy the
    assets were ordered by `asset_ref`, now they are ordered by `id`. This
    has a minor impact on the numbers sensitive to the epsilons, akin to a
    change of seeds
  * Added a test on the ordering of the epsilons
  * Accepted `.` and `|` as valid characters for source IDs
  * Changed the GMF calculator to use a single seed per unique rupture
  * Change the SESCollection exporter: now a single file is exported, before
    we were exporting one file per source model path per tectonic region model
  * Changed the event based calculators to avoid duplicating ruptures
    occurring more than once
  * Changed the risk calculators to work in blocks of assets on the same site
  * Made it possible to set different integration distances for different
    tectonic region types
  * Optimized the aggregation by asset in the event based risk calculator
  * Reporting the source_id when the filtering fails

python-oq-risklib (0.12.1-0~precise01) precise; urgency=low

  [Michele Simionato]
  * Improved the validation of NRML files

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Thu, 17 Mar 2016 14:29:04 +0100

python-oq-risklib (0.12.0-0~precise01) precise; urgency=low

  [Michele Simionato]
  * Reduced the data transfer for the average losses by a factor of 2
    insured_losses is false in the event based risk calculator
  * Fixed the uniform hazard spectra CSV export and used a more consistent
    format
  * Fixed a 32 bit/64 bit casting error for risk computations with a site model
    starting from a non-empty datastore
  * Discriminate the case of a missing datastore from the case of having no
    permission to access it
  * Saved half the space in absence of insured_losses in the event based risk
    calculator
  * Rewritten the CSV exporters for dmg_by_asset, dmg_by_taxo and dmg_total
  * Added CSV exporters for the ground motion fields
  * Stored `time_events` and `CostCalculator` in the datastore as arrays
  * Made possible to generate the report even for descriptions with
    non-ASCII characters
  * Added a tag `riskInvestigationTime` to the exported loss maps and curves
  * Made customizable the header of CSV files

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Wed, 02 Mar 2016 14:10:06 +0100

python-oq-risklib (0.11.0-0~precise01) precise; urgency=low

  [Daniele Viganò, Matteo Nastasi]
  * Updates Copyrights to 2016 and uniformized headers

  [Michele Simionato]
  * Raised an error early if there is a PoE=1 for classical damage
    calculations
  * Introduced a cutoff for minIML=0 in continuous fragility functions
  * Fixed the `ses_ratio` when the number of samples is greater than 1
  * Changed the order of the arguments in the commands `oq-lite show` and
    `oq-lite export`
  * Fixed a subtle bug: now the epsilons are correctly associated to the
    assets because `asset.idx` is correctly set
  * Removed the `assets_by_site` pickled array from the datastore
  * Fixed the XML exporters for loss maps/curves mean and quantiles
  * Now it is possible to override (most) configuration parameters with the
    command `oq-lite run --param NAME1=VALUE1 NAME2=VALUE2 ...`
  * Enhanced the reports generated by `oq-lite info --report` and
    `oq-lite show fullreport`
  * Made the check on the costs more forgiving for damage calculators
  * Optimized the source model parsing
  * Serialized in HDF5 format the CompositionInfo object
  * Fixed the initial accumulator in the EventBasedRuptureCalculator

  [Anirudh Rao]
  * Removed the extra ScenarioDamage demo
  * Removed unused parameters from the risk demo job files
    (including `asset_hazard_distance` and `intensity_measure_types`)

  [Graeme Weatherill]
  * Incorporated ArbitraryMFD and YoungsCoppersmithMFD into the supported
    MFDs

  [Michele Simionato]
  * Added a validation on the IMT for fragility functions in NRML 0.5 format
  * Fixed an ordering bug in `get_scenario_from_nrml`
  * Saved the site collection and the risk models in HDF5 format
  * Renamed `fatalities` to `occupants` to be consistent with the
    convention on the file names of the risk models
  * Introduced a serialization protocol to save objects in the datastore

  [Matteo Nastasi]
  * Added framework to run bash scripts tests and collect associated
    xunit report
  * Used the python-prctl library to automatically kill processes when
    the parent dies unexpectedly (linux-only)

  [Michele Simionato]
  * Unified the calculators classical and classical_tiling
  * The epsilon_matrix is not saved anymore
  * Source filtering is now on demand, depending on the parameter
    `filter_sources`.
  * Refactored the source filtering/splitting mechanism and improved
    substantially the classical_tiling calculator
  * Managed correctly the case of vulnerability functions with a different
    number of loss ratios
  * Now the flag `individual_curves` is honored for aggregate curves
    in the event based risk calculator
  * Fixed a bug breaking the compution of statistics of aggregate curves
    with insured losses
  * Added a validation on the cost type in the exposure
  * Added a validation for missing region_grid_spacing
  * Added a cross validation for the `time_event` parameter
  * Added a validation for empty descriptions in fragility models
  * Changed the classical_tiling calculator to split the heavy sources first
  * Fixed the GMPETable GSIM and added an end-to-end test for it
  * Changed the management of the seeds in the event based calculator:
    now we generate a seed per each rupture
  * Worked around a bug in h5py.Group.visitems in Ubuntu 12.04
  * Reduced the precision of the site mesh to 32 bits
  * The source model logic tree parser supports NRML 0.5
  * Reduced the precision of the scenario_damage outputs to 32 bits
  * Added an XML exporter for the UHS curves
  * Rewritten the classical_tiling calculator in oq-lite
  * Fixed a bug when exporting the hazard curves in presence of quantiles/means
  * Improved the header of the exported CSV files, to make it QGIS-friendly
  * Fixed a bug in the avg_losses for the event based risk calculator
  * Keep exporting files, even if they are empty
  * Exported information about the realizations into a csv file
  * Ported the disaggregation calculator to oq-lite
  * Added IMT information in the hazard curve XML exporter
  * Fixed a small bug in classical_damage for steps_per_interval = 1

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Mon, 15 Feb 2016 11:04:31 +0100

python-oq-risklib (0.10.0-0~precise01) precise; urgency=low

  [Michele Simionato]
  * Ported the classical_bcr calculator to oq-lite
  * Added a check on the uniform_hazard_spectra parameter depending on the IMTs
  * Fixed a sorting error in the CSV exporters by asset
  * Fully ported the classical_risk calculator to oq-lite
  * Removed the (unused and experimental) loss fractions functionality from
    the classical_risk calculator
  * Added a check for the case of no assets within the region
  * Fixed the check for missing taxonomies in the risk model
  * Added `--profile` flag to oq-lite run
  * The performance info has been moved fully in the datastore
  * Saved one loss table per realization in the datastore
  * Fixed a bug in the oq-lite exporter of the hazard maps
  * Removed a spurious comma from the rupture tag
  * Removed the epsilon_sampling feature from event_based_risk

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Mon, 14 Dec 2015 10:12:22 +0100

python-oq-risklib (0.9.0-0~precise01) precise; urgency=low

  [Graeme Weatherill]
  * Added fault geometry epistemic uncertainties to the source model logic tree

  [Michele Simionato]
  * Fixed the `oq-lite show --rlzs` command
  * Fixed a minor bug in the source writer for nodalPlane nodes
  * Added an attribute `discretization` to `areaGeometry` nodes
  * Added a command oq-lite show_attrs to display the attributes of a HDF5
    dataset
  * Added flags `asset_loss_table` (default False) and `avg_losses`
    (default True) to build the event loss table and the average losses
    per asset respectively
  * Added a check on the cost types read from the exposure

  [Matteo Nastasi]
  * Demos moved to /usr/share/openquake/risklib

  [Michele Simionato]
  * Added outputs `agg_curve-rlzs` and `agg_curve-stats` in the HDF5 file
  * Changed the storage of the event based risk outputs in the HDF5 file
  * Added a consistency check between the risk model keys in the job.ini and
    the risk model files
  * Scenario Risk and Scenario Damage calculators can work with a single
    configuration file now
  * When computing insured losses for an exposure without deductible and
    insuredLimit, raise an error early
  * Improved the export names of the oq-lite calculators
  * Updated all the risk demos
  * Changed the EventBasedRisk demo to produce loss curves
  * Fixed a bug with the error management: now a critical error in the
    the pre-calculation stops the whole computation and there is a single
    traceback
  * Improved the memory consumption and data transfer of the event_based_risk
    calculator
  * All data of a computation are now stored in a single calc_XXX.hdf5 file
  * The ProbabilisticEventBased risk demo works with a single job.ini
  * Added support for NRML 0.5 for fragility functions and deprecated NRML 0.4
  * Added a ConsequenceModel parser and implemented the calculation of
    consequences in the scenario_damage calculator

  [Matteo Nastasi]
  * Imposed version for python-h5py dependency, Ubuntu 12.04 will use
    backported version from GEM repository

  [Michele Simionato]
  * Added a test for a bug of h5py version 2.0.1
  * Added a check for specific_assets not in the exposure
  * Added XML exports for the hazard curves
  * Enhanced the .rst report with info about the exposure and the source model
  * Changed the PerformanceMonitor to write only on the controller
  * Introduced HDF5 outputs for the scenario_risk calculator
  * Introduced HDF5 outputs for the scenario_damage calculator
  * Added the ability to read scenario NRML files
  * Silenced an ElementTree warning
  * Added a test with multiple assets on the same site
  * Improved the error message for invalid exposures
  * Fixed a few tests on Windows

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Tue, 17 Nov 2015 10:57:39 +0100

python-oq-risklib (0.8.0-0~precise01) precise; urgency=low

  [Michele Simionato]
  * Added a --pdb flag
  * Added validation to the source IDs
  * It is now possible to pass arguments to the GSIMs in the logic tree file
  * Added data transfer information to the CSV reports
  * Fixed several bugs in the ebr calculator
  * The composite source model is saved in the HDF5 file
  * Added a command 'oq-lite info --report job.ini' to produce a report
    on a calculation without running it
  * Negative calculations IDs are recognized in the oq-lite commands
  * The GMFs are saved in the HDF5 file
  * Added vulnerability functions with Probability Mass Function
  * oq-lite has now a 'reduce' command to reduce large computations
  * The epsilon_matrix is now saved in HDF5 format
  * Fixed a bug in apply_reduce when the first argument is a numpy array
  * Added a functionality 'write_source_model' to serialize sources in XML

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Wed, 23 Sep 2015 15:17:28 +0200

python-oq-risklib (0.7.2-0~precise01) precise; urgency=low

  [Matteo Nastasi]
  * Packaging system improvement

  [Michele Simionato]
  * Fixed an ordering bug in the GSIM logic tree

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Fri, 05 Jun 2015 11:55:09 +0200

python-oq-risklib (0.7.1-0~precise01) precise; urgency=low

  [Michele Simionato]
  * Fixed an export bug in the scenario_damage calculator: now the case of
    multiple assets on the same location is treated correctly

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Wed, 20 May 2015 09:58:07 +0200

python-oq-risklib (0.7.0-1~precise01) precise; urgency=low

  [Matteo Nastasi, Daniele Viganò]
  * Fixed dependencies version management

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Thu, 07 May 2015 13:56:09 +0200

python-oq-risklib (0.7.0-0~precise01) precise; urgency=low

  [Matteo Nastasi, Daniele Viganò]
  * Add binary package support for both Ubuntu 12.04 (Precise)
    and Ubuntu 14.04 (Trusty)

  [Michele Simionato]
  * Added a check on invalid IMTs when using the JB2009 correlation model
  * Made sure that the site collection is ordered by (lon, lat) in all cases
  * Extended the scenario calculators so that they can manage multiple GSIMs
    at the same time
  * Ported the event_based calculator to oq-lite (except disaggregation)
  * Introduced a DataStore class to save either generic pickled objects or
    numpy arrays; if installed, it can use the h5py library
  * Added defaults to the parameters in job.ini
  * Extended the 'oq-lite info' command to plot some useful informations
    about the source model
  * Ported the classical_risk calculator to oq-lite
  * Added an 'oq-lite pick_rlzs' command to display the distance of the
    hazard curves from the mean, by using the RMSEP distance
  * Ported the scenario_risk calculator to oq-lite
  * Added a check to forbid exposures with an asset number=0
  * In the tests you can compare for equality files containing numbers, possibly
    ignoring the last digits
  * Increased the number of SES generated by the demo
    ProbabilisticEventBased from 10 to 200
  * For the event based calculator, print the site index where the discrepancy
    with the classical hazard curves is greater
  * Now the engine is able to gunzip transparently the logic tree files too
  * Added a convergency test for the hazard curves generated by the event
    based calculator when the number of samples is high
  * Added a script to reduce large source models and large exposure models
  * Fixed a bug in the NRML writer for nodes with value=0
  * Added a 'plot' command to oq-lite

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Thu, 07 May 2015 10:51:21 +0200

python-oq-risklib (0.6.0-1) precise; urgency=low

  [Matteo Nastasi]
  * Wrong oq-hazardlib version dependency fixed

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Fri, 27 Feb 2015 11:54:22 +0100

python-oq-risklib (0.6.0-0) precise; urgency=low

  [Michele Simionato]
  * Changed the event based risk demo to use fully the specific assets feature
  * Implemented export of SESCollections
  * Classical tiling calculator in oq-lite
  * Raise an error if there are assets missing the number attribute
  * Added a prefilter flag
  * Moved the management of zipfiles into oq-lite
  * Export lon and lat in the hazard curves
  * Simplified the management of GMPE logic tree realizations
  * Towards supporting Ubuntu 14.04
  * Fixed error when minIML|maxIML are missing in the fragility model
  * Ported the generation of UHS curves into risklib
  * Better error message for duplicated IMLs
  * Implemented hazard map export in oq-lite
  * Create the export_dir if possible
  * Moved the demos inside oq-risklib
  * Now sites can be extracted from the site_model.xml file
  * Fixed the oversampling bug
  * Added a warning in case of oversampling
  * Provided a user-friendly string representation of the class RlzsAssoc
  * Added classical damage QA tests
  * Add a test case for sampling two source models of different weight
  * Implemented classical damage calculator
  * Moved hazard maps and mean and quantile functions from the engine into risklib
  * Added a check for duplicated branchset IDs
  * If export_dir is not given, save on $HOME

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Wed, 25 Feb 2015 17:04:04 +0100

python-oq-risklib (0.5.1-0) precise; urgency=low

  * consistency in version management between debian/ubuntu package and
    library from git sources

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Thu, 18 Dec 2014 15:42:53 +0100

python-oq-risklib (0.5.0-1) precise; urgency=low

  * Fixed version in the documentation
  * Removed an incorrect warning
  * Scenario damage tests
  * Added a DamageWriter class and the expected outputs for the ScenarioDamage
    QA tests
  * Improve the error message when the user sets the wrong calculation_mode
  * Moved get_realizations from the engine into commonlib
  * Added more validation to dictionaries
  * Added a new parameter complex_fault_mesh_spacing
  * Ported the scenario tests to oq-lite
  * Added a get_params utility
  * Simplified the monitoring
  * Add the QA tests data removed from the engine
  * Added a forgotten .rst file
  * Use shallow-clone to improve CI builds speed
  * Fix documentation
  * Merged commonlib inside risklib
  * Move the calculation of input/output weights into commonlib
  * The export_dir is now always given
  * Small fixes to commonlib
  * Better error message for regions that cannot be discretized
  * Fixed precision
  * Add a facility to read source models in commonlib
  * Add an hard limit to check_mem_usage()
  * Fixed test_different_levels_ok
  * Removed an excessive validation
  * Added a validation is_valid_hazard_curves
  * Reverted the check on duplicated vulnerabilitySetID
  * Improved the validation of vulnerability models
  * Examples, tests and notebook for the feature of oq-lite
  * Some refactoring of the classes RiskModel and RiskInput
  * Basic support for risk calculators in commonlib
  * Building the documentation of risklib and some refactoring
  * Build the documentation of commonlib
  * Support of the oq-lite command-line tool
  * Converting the region_constraint into a WKT polygon in commonlib, not in
    the engine
  * Fixed a subtle ImportError
  * Added a forgotten file
  * Support for the simplification of the risk calculators
  * Rewritten the RiskModel class and refactored the Workflow classes
  * Loss per event per asset
  * Dependency check
  * Updated version of risklib
  * Merged nrmllib inside commonlib
  * Added get_exposure and some refactoring
  * Changed the RiskModel API
  * The investigationTime attribute is optional
  * Use the new validation mechanism for vulnerability/fragility functions
  * Reflected the change in risklib
  * Fixed typo in an error message
  * reversed edges to make complex surface comply with Aki & Richards conven...
  * Moved the node context manager to the node library
  * Better debugging representation of a node
  * The maximum_distance must be mandatory in all hazard calculators
  * Restored the NrmlHazardlibConverter
  * Used PlanarSurface.from_corner_points
  * Improved the validation on PMF
  * Added a generic SourceConverter class for all sources, including the
    NonParametric ones
  * Added a lazy function read_nodes
  * Added a "node_factory" validation facility to the node library
  * Rewritten the openquake validation mechanism; now it is done in commonlib
  * Support validation code for the engine
  * Added a few validation functions
  * Added a validation on the GSIM name
  * Added MeanLossTestCase and some comments/docstrings
  * Small improvements
  * Logging the size of received data, to assess the stress on rabbitmq
  * Parallel filtering
  * Fixed the branch ordering
  * Ordering the sources after splitting-filtering them
  * Added an EpsilonProvider class
  * Introduced get_epsilons
  * Improved the splitting mechanism
  * Fix an ordering on the exported GMF
  * Moved parse_config from the engine to commonlib
  * Given a proper ordering to BranchTuples
  * Decoupled the sampling logic from the GsimLogicTree class
  * Get more information about the number of realizations in full enumeration
  * Small refactoring of the block-splitting routines
  * Fixed the sampling in GsimLogicTree
  * Small changes to support the refactoring on the engine side
  * packager.sh: missing update fixed
  * Risk loaders
  * Added a property .imts to the RiskModel class
  * The rupture seed is now visible in the XML file
  * Made explicit the dependence from the getters
  * GMPE logic tree fix
  * Many improvements to make the SourceCollector more usable from the
    command-line
  * Fix for the case of empty SES
  * Add a debug flag to enable set -x in packager.sh
  * Improved the SourceCollector
  * Fix gmf duplication
  * Removed logictree.enumerate_paths
  * Moved modules to manage sources and logic trees from the engine
  * Minor refactoring of scientific.scenario_damage
  * Reflected the API change in risklib
  * Refactoring of risklib needed to solve the problem of the block size
    dependence
  * Remove CalculationUnit
  * Removed some useless code from risklib
  * Fix branch var to be compliant within the new CI git plugin
  * Updates Copyright to 2014
  * rupture_to_element facility
  * Ci devtest
  * Renamed common->commonlib
  * Add setup.py
  * Improved validation and some cleanup
  * Decouple the gsim logic tree from the SES output and remove dead code
  * Moved the tests directory inside the package
  * Refactored the conversion library
  * More work on the conversion/validation library
  * Add loss type to risk outputs
  * Pull request for the validation library
  * Standard Loss map GeoJSON
  * Exporting the GMF in XML should not require keeping all the tree in memory
  * No unicode + StringIO in tests
  * Fix parsing of isAbsolute
  * Insured loss curves statistics
  * Csv tools
  * Fixed the streaming xml writer
  * Hazard Curve GeoJSON parser
  * GeoJSON map node values should be floats
  * Node library
  * Ruptures now have a tag attribute
  * Revise insured losses algorithm
  * Added an InvalidFile exception
  * Add stdDevLoss field
  * Compute Curve stats
  * Implemented a StreamingXMLWriter
  * Minor optimizations by using memoization
  * Fix quantile maps computation
  * Fix Asset statistics
  * NRML parsers/writers should be able to accept either file paths or
    file-like objects
  * Refactoring: added risk workflows
  * Add '__version__' to package init
  * Hazard map GeoJSON writer
  * GeoJSON LossMap Writer
  * Remove 'ndenumerate'

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Wed, 10 Dec 2014 11:17:03 +0100

python-oq-risklib (0.3.0-1) precise; urgency=low

  * Lxc sandbox - improved CI with sandboxed source tests (LP: #1177319)
  * Refactoring: remove curve module (LP: #1174231)
  * Update Event Based algorithm (LP: #1168446)
  * Fix sampling in lognormaldistribution when mean = 0, covs = 0
    (LP: #1167863)
  * Strictly increasing vulnerability function in classical calculator
    (LP: #1165076)
  * Added concurrent.futures to risklib (temporary solution)
  * Update average loss formula (LP: #1156557)
  * Added AGPL license file
  * Refactoring needed to support Structure dependent IMT in scenario damage
    (LP: #1154549)
  * Implemented scenario_damage and scenario directly in risklib (LP: #1154110)
  * Make the risklib able to read csv inputs (LP: #1154110)
  * Fix OQ Engine fails working end-to-end when there is a different number of
    gmvs per site (LP: #1144388)
  * Fix Insured losses computation
  * Removed Asset and AssetOutput classes
  * Small refactoring of the FragilityFunctions so that it is easier to
    instantiate them from the FragilityModelParser in nrml (LP: #1100235)

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Mon, 24 Jun 2013 16:31:18 +0200

python-oq-risklib (0.2.0-1) precise; urgency=low

  * Rename of the package and namespace refactoring

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Sat, 09 Feb 2013 10:18:32 +0100

python-oq-risklib (0.1.0-1) precise; urgency=low

  * Upstream release

 -- Matteo Nastasi (GEM Foundation) <nastasi@openquake.org>  Wed, 12 Dec 2012 17:06:39 +0100
